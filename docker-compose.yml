# we are building or defining services that we want to run in our container 
version: '3'
services:
  app:
  # we can utilize this build tool to configure other options 
  # that are applied at build time
  # we will specify . which refers to the folder its in 
  #  we essentialy means the dockerfile exists  and we can utilize that 
  #  to support the build 
    build: .
    # a volume in this context is describing a folder that resides on 
    # our operating system within the container 
    volumes:
    # django is a folder that is in the container
    # we are building a link between the containers folder and the /django folder (our app)
      - ./rihalProject:/django
    ports:
      - 8000:8000
    image: app:django
    container_name: django_container
    environment:
      - SECRET_KEY=${SECRET_KEY}  # Use the SECRET_KEY from .env file
      - DEBUG=${DEBUG}            # Use the DEBUG flag from .env file
      - DATABASE_URL=${DATABASE_URL}  # Use the DATABASE_URL from .env file

    # the zeros are to represent all the ip addresses from this service 
    # and expose all of them over to port 8000
    depends_on:
      - db
      

  db:
    image: postgres:15
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
       POSTGRES_DB: rihalDB
       POSTGRES_USER: postgres
       POSTGRES_PASSWORD: 8aLJab
    container_name: postgres_db
    ports:
      - "5432:5432"
    hostname: db

volumes:
  pgdata: {}